name: Test & build Polkadot

on: [push]
jobs:
  linux-test-stable:
    name:                      Test linux stable
    runs-on:                   ubuntu-latest
    container:                 generalbeck/rust-builder:musl
    env:
      RUSTFLAGS:               "-Cdebug-assertions=y"
      CARGO_INCREMENTAL:       0
      BUILD_DUMMY_WASM_BINARY: 1
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@master
        with:
          submodules:          recursive
      - name:                  Prepare registry & index dir's
        shell:                 bash
        run:                   mkdir -p /usr/local/cargo/registry&&mkdir -p /usr/local/cargo/git
      - name:                  Cache cargo registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                /usr/local/cargo/registry
          key:                 ${{ runner.os }}-cargo-registry-polkadot-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Cache cargo index
        uses:                  actions/cache@v1.1.2
        with:
          path:                /usr/local/cargo/git
          key:                 ${{ runner.os }}-cargo-git-polkadot-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[linux-test-stable]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo Test linux stable
        shell:                 bash
        continue-on-error:     true
        run:                   cargo test --all --release --verbose --locked
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   |
          echo "Prepare build directory for cache"
          find ./target/release -maxdepth 1 -type f -delete;
          rm -rf ./target/release/{deps,.fingerprint}/*{polkadot}*;
          rm -f  ./target/.rustc_info.json;

#build
  build-linux-polkadot:
name:                  Build linux Polkadot
    runs-on:               ubuntu-latest
    container:             generalbeck/rust-builder:musl
    steps:
      - name:              Checkout sources
        uses:              actions/checkout@master
      - name:              Prepare registry & index dir's
        shell:             bash
        run:               mkdir -p /usr/local/cargo/registry&&mkdir -p /usr/local/cargo/git
      - name:              Cache cargo registry
        uses:              actions/cache@v1.1.2
        with:
          path:            /usr/local/cargo/registry
          key:             ${{ runner.os }}-cargo-registry-build-${{ hashFiles('**/Cargo.lock') }}
      - name:              Cache cargo index
        uses:              actions/cache@v1.1.2
        with:
          path:            /usr/local/cargo/git
          key:             ${{ runner.os }}-cargo-git-build-${{ hashFiles('**/Cargo.lock') }}
      - name:              Restore ./target
        uses:              actions/cache@v1.1.2
        with:
          path:            target
          key:             ${{ runner.OS }}-cargo-build-[build-polkadot]-${{ hashFiles('**/Cargo.lock') }}
      - name:              Run cargo build Substrate
        continue-on-error: true
        shell:             bash
        run:               cargo build --target x86_64-unknown-linux-musl --release --verbose
      - name:              Prepare artifacts
        shell:             bash
        run:               |
          echo "_____ Post-processing binaries _____"
          rm -rf artifacts/*
          mkdir -p artifacts/
          cp -v target/x86_64-unknown-linux-musl/release/polkadot artifacts/substrate
      - name:              Upload artifact
        uses:              actions/upload-artifact@v1
        continue-on-error: true
        with:
          name:            ${{ runner.os }}.polkadot.zip
          path:            artifacts/
